upstream frontend {
    ip_hash;
    server nodejs_microservices_users_2:5000;
    server nodejs_microservices_users_3:5000;
    #server nodejs_microservices_users_4:5000;

    server nodejs_microservices_users_5:5000  max_fails=3 fail_timeout=30s;
}


limit_req_zone $binary_remote_addr zone=limitreqsbyaddr:10m rate=1r/s;
limit_req_status 429;

server {

    error_page 429 /errors/429.html;
    server_name example.com www.example.com;
    listen 70;

    location /google {
    proxy_pass https://www.google.com/;
    }


    location /api/v1/books {
        proxy_pass http://books:3000/api/v1/books;
    }

    location /api/v1/cars {
        proxy_pass http://cars:4000/api/v1/cars;
    }

    location /api/v1/users {
        limit_req zone=limitreqsbyaddr;
        proxy_pass http://frontend;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /api/v1/backend {
        proxy_pass http://backend:8080/;
    }
}
